name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Build TLE installer
        run: make tle

      - name: Verify TLE installer was created
        run: |
          if [ ! -f install-tle.sql ]; then
            echo "ERROR: install-tle.sql was not created"
            exit 1
          fi
          echo "install-tle.sql created successfully"
          ls -lh install-tle.sql

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create release notes
        id: release_notes
        run: |
          if [ -f "docs/CHANGELOG-${{ steps.version.outputs.version }}.md" ]; then
            echo "Using CHANGELOG-${{ steps.version.outputs.version }}.md"
            cat "docs/CHANGELOG-${{ steps.version.outputs.version }}.md" > release-notes.md
          elif [ -f latest-changes.md ] && [ -n "$(grep -v '^[[:space:]]*$' latest-changes.md)" ]; then
            echo "Using latest-changes.md"
            cat latest-changes.md > release-notes.md
          else
            echo "Creating default release notes"
            echo "Metagration v${{ steps.version.outputs.version }}" > release-notes.md
            echo "" >> release-notes.md
            echo "## Installation" >> release-notes.md
            echo "" >> release-notes.md
            echo "\`\`\`sql" >> release-notes.md
            echo "CREATE EXTENSION pg_tle;" >> release-notes.md
            echo "\`\`\`" >> release-notes.md
            echo "" >> release-notes.md
            echo "\`\`\`bash" >> release-notes.md
            echo "psql your_database -f install-tle.sql" >> release-notes.md
            echo "\`\`\`" >> release-notes.md
            echo "" >> release-notes.md
            echo "\`\`\`sql" >> release-notes.md
            echo "CREATE EXTENSION metagration;" >> release-notes.md
            echo "\`\`\`" >> release-notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body_path: release-notes.md
          files: |
            install-tle.sql
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
